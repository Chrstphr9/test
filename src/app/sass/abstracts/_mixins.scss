// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/*=====================****===================== */
/* browser prefix adding  */
@mixin add-prefix($prop, $value...) {
  #{$prop}: #{$value};
  -webkit-#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
}

@mixin display($value) {
  display: $value;
  display: -webkit-#{$value};
  display: -ms-#{$value};
}

@mixin align-items($value) {
  align-items: $value;
  -webkit-box-align: $value;
  -ms-flex-align: $value;
}

@mixin justify-content($value) {
  justify-content: $value;
  -webkit-box-pack: $value;
  -ms-flex-pack: $value;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}

//  transition
@mixin transition($transitions) {
  transition: $transitions;
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -o-transition: $transitions;
  -ms-transition: $transitions;
}

//  transform property
@mixin transform($property) {
  transform: $property;
  -webkit-transform: $property;
  -ms-transform: $property;
}

//  text gradient color
@mixin gradient-text {
  background-clip: content-box;
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
}
// @mixin background-image($img, $background-position, $background-color) {
//   background-image: url("#{$bnr-image-path}/#{$img}");
//   background-repeat: no-repeat;
//   background-position: $background-position;
// }
@mixin background-image(
  $folder: images,
  $img: file,
  $type: png,
  $opacty-color,
  $repeat: no-repeat
) {
  background: url(../images/#{$folder}/#{$img}.#{$type}) #{$opacty-color};
  background-repeat: #{$repeat};
  background-position: center;
  background-size: cover;
  background-blend-mode: darken;
  @content;
}

//  transform property
@mixin transform($property) {
  transform: $property;
  -webkit-transform: $property;
  -ms-transform: $property;
}
//Responsive Breakpoints

@mixin breakpoint($point) {
  @if $point==sm {
    @media only screen and (min-width: 576px) {
      @content;
    }
  } @else if $point==max-xsm {
    @media only screen and (max-width: 320.98px) {
      @content;
    }
  } @else if $point==max-sm {
    @media only screen and (max-width: 575.98px) {
      @content;
    }
  } @else if $point==md {
    @media only screen and (min-width: 768px) {
      @content;
    }
  } @else if $point==max-md {
    @media only screen and (max-width: 767.98px) {
      @content;
    }
  } @else if $point==lg {
    @media only screen and (min-width: 992px) {
      @content;
    }
  } @else if $point==max-lg {
    @media only screen and (max-width: 991.98px) {
      @content;
    }
  } @else if $point==mlg {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  } @else if $point==max-mlg {
    @media only screen and (max-width: 1023.98px) {
      @content;
    }
  } @else if $point==xl {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  } @else if $point==max-xl {
    @media only screen and (max-width: 1199.98px) {
      @content;
    }
  } @else if $point==xxl {
    @media only screen and (min-width: 1400px) {
      @content;
    }
  } @else if $point==max-xxl {
    @media only screen and (max-width: 1439.98px) {
      @content;
    }
  } @else if $point==xxxl {
    @media only screen and (min-width: 1600px) {
      @content;
    }
  } @else if $point==max-xxxl {
    @media only screen and (max-width: 1599.98px) {
      @content;
    }
  } @else if $point==xxxxl {
    @media only screen and (min-width: 1700px) {
      @content;
    }
  } @else if $point==max-xxxxl {
    @media only screen and (max-width: 1699.98px) {
      @content;
    }
  } @else if $point==5xl {
    @media only screen and (min-width: 1800px) {
      @content;
    }
  } @else if $point==max-5xl {
    @media only screen and (max-width: 1799.98px) {
      @content;
    }
  } @else if $point==6xl {
    @media only screen and (min-width: 1900px) {
      @content;
    }
  } @else if $point==max-6xl {
    @media only screen and (max-width: 1899.98px) {
      @content;
    }
  }
}
@mixin hover {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}
